API
		Geolocation API

Filter sidebar

In this article
* 		Concepts and usage
* 		Interfaces
* 		Security considerations
* 		Examples
* 		Specifications
* 		Browser compatibility
* 		See also
* 		Geolocation API
* 		Guides
    * 		Using the Geolocation API
* 		
* 		Interfaces
    * 		Geolocation
    * 		GeolocationCoordinates
    * 		GeolocationPosition
    * 		GeolocationPositionError
* 		
* 		Properties
    * 		Navigator.geolocation
* 		

Geolocation API

Baseline Widely available

Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.
The Geolocation API allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information.
WebExtensions that wish to use the Geolocationobject must add the "geolocation" permission to their manifest. The user's operating system will prompt the user to allow location access the first time it is requested.
Concepts and usage
You will often want to retrieve a user's location information in your web app, for example to plot their location on a map, or display personalized information relevant to their location.
The Geolocation API is accessed via a call to navigator.geolocation; this will cause the user's browser to ask them for permission to access their location data. If they accept, then the browser will use the best available functionality on the device to access this information (for example, GPS).
The developer can now access this location information in a couple of different ways:
* Geolocation.getCurrentPosition(): Retrieves the device's current location.
* Geolocation.watchPosition(): Registers a handler function that will be called automatically each time the position of the device changes, returning the updated location.
In both cases, the method call takes up to three arguments:
* A mandatory success callback: If the location retrieval is successful, the callback executes with a GeolocationPosition object as its only parameter, providing access to the location data.
* An optional error callback: If the location retrieval is unsuccessful, the callback executes with a GeolocationPositionErrorobject as its only parameter, providing access information on what went wrong.
* An optional object which provides options for retrieval of the position data.
For further information on Geolocation usage, read Using the Geolocation API.
Interfaces
Geolocation
The main class of this API — contains methods to retrieve the user's current position, watch for changes in their position, and clear a previously-set watch.
GeolocationPosition
Represents the position of a user. A GeolocationPosition instance is returned by a successful call to one of the methods contained inside Geolocation, inside a success callback, and contains a timestamp plus a GeolocationCoordinates object instance.
GeolocationCoordinates
Represents the coordinates of a user's position; a GeolocationCoordinates instance contains latitude, longitude, and other important related information.
GeolocationPositionError
A GeolocationPositionError is returned by an unsuccessful call to one of the methods contained inside Geolocation, inside an error callback, and contains an error code and message.
Extensions to other interfaces
Navigator.geolocation
The entry point into the API. Returns a Geolocation object instance, from which all other functionality can be accessed.
Security considerations
The Geolocation API allows users to programmatically access location information in secure contexts.
Access may further be controlled by the Permissions Policy directive geolocation. The default allowlist for geolocation is self, which allows access to location information in same-origin nested frames only. Third party usage is enabled by setting a Permissions-Policyresponse header to grant permission to a particular third party origin:
HTTP
Copy to Clipboard

Permissions-Policy: geolocation=(self b.example.com)
The allow="geolocation" attribute must then be added to the iframe element with sources from that origin:
HTML
Copy to Clipboard

<iframe src="https://b.example.com" allow="geolocation"/></iframe>
Geolocation data may reveal information that the device owner does not want to share. Therefore, users must grant explicit permission via a prompt when either Geolocation.getCurrentPosition() or Geolocation.watchPosition() is called (unless the permission state is already granted or denied). The lifetime of a granted permission depends on the user agent, and may be time based, session based, or even permanent. The Permissions APIgeolocation permission can be used to test whether access to use location information is granted, denied or prompt (requires user acknowledgement of a prompt).
Examples
See Using the Geolocation API for example code.
Specifications
Specification
Geolocation
# geolocation_interface
Browser compatibility
Report problems with this compatibility data on GitHub
Geolocation
Chrome – Full support
Chrome
5
Toggle history
Edge – Full support
Edge
12
Toggle history
Firefox – Full support
Firefox
3.5
footnote
Toggle history
Opera – Full support
Opera
10.6
Toggle history
Safari – Full support
Safari
5
Toggle history
Chrome Android – Full support
Chrome Android
18
Toggle history
Firefox for Android – Full support
Firefox for Android
4
Toggle history
Opera Android – Full support
Opera Android
11
Toggle history
Safari on iOS – Full support
Safari on iOS
3
Toggle history
Samsung Internet – Full support
Samsung Internet
1.0
Toggle history
WebView Android – Full support
WebView Android
37
Toggle history
WebView on iOS – Full support
WebView on iOS
3
Toggle history
clearWatch
Chrome – Full support
Chrome
5
Toggle history
Edge – Full support
Edge
12
Toggle history
Firefox – Full support
Firefox
3.5
Toggle history
Opera – Full support
Opera
10.6
Toggle history
Safari – Full support
Safari
5
Toggle history
Chrome Android – Full support
Chrome Android
18
Toggle history
Firefox for Android – Full support
Firefox for Android
4
Toggle history
Opera Android – Full support
Opera Android
11
Toggle history
Safari on iOS – Full support
Safari on iOS
3
Toggle history
Samsung Internet – Full support
Samsung Internet
1.0
Toggle history
WebView Android – Full support
WebView Android
37
Toggle history
WebView on iOS – Full support
WebView on iOS
3
Toggle history
getCurrentPosition
Chrome – Full support
Chrome
5
Toggle history
Edge – Full support
Edge
12
Toggle history
Firefox – Full support
Firefox
3.5
Toggle history
Opera – Full support
Opera
10.6
Toggle history
Safari – Full support
Safari
5
Toggle history
Chrome Android – Full support
Chrome Android
18
Toggle history
Firefox for Android – Full support
Firefox for Android
4
Toggle history
Opera Android – Full support
Opera Android
11
Toggle history
Safari on iOS – Full support
Safari on iOS
3
Toggle history
Samsung Internet – Full support
Samsung Internet
1.0
Toggle history
WebView Android – Full support
WebView Android
37
Toggle history
WebView on iOS – Full support
WebView on iOS
3
Toggle history
Secure context required
Chrome – Full support
Chrome
50
Toggle history
Edge – Full support
Edge
79
Toggle history
Firefox – Full support
Firefox
55
Toggle history
Opera – Full support
Opera
37
Toggle history
Safari – Full support
Safari
10
Toggle history
Chrome Android – Full support
Chrome Android
50
Toggle history
Firefox for Android – Full support
Firefox for Android
55
Toggle history
Opera Android – Full support
Opera Android
37
Toggle history
Safari on iOS – Full support
Safari on iOS
10
Toggle history
Samsung Internet – Full support
Samsung 
