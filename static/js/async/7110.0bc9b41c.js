(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["7110"],{4753:function(e,s,t){"use strict";t.r(s);var i=t("5893"),r=t("65");function a(e){let s=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h1,{id:"migration-to-130",children:["Migration to 13.0",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#migration-to-130",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"Migration to React Native Testing Library version 13 from version 12.x."}),"\n",(0,i.jsxs)(s.h1,{id:"breaking-changes",children:["Breaking changes",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#breaking-changes",children:"#"})]}),"\n",(0,i.jsxs)(s.h2,{id:"supported-react-and-react-native-versions",children:["Supported React and React Native versions",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#supported-react-and-react-native-versions",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"This version supports only React 19 and corresponding React Native versions. If you use React 18 or 19, please use latest of v12 versions."}),"\n",(0,i.jsx)(s.p,{children:"[Note: at the moment there is no React Native for React 19, and React 19 is still in beta, so we use React 18.3 for the time being]."}),"\n",(0,i.jsxs)(s.h2,{id:"removed-deprecated-byaccessibilitystate-queries",children:["Removed deprecated *ByAccessibilityState queries",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-deprecated-byaccessibilitystate-queries",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"This deprecated query has been removed as is typically too general to give meaningful results. Use one of the following options:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#by-role",children:(0,i.jsx)(s.code,{children:"*ByRole"})})," query with relevant state options: ",(0,i.jsx)(s.code,{children:"disabled"}),", ",(0,i.jsx)(s.code,{children:"selected"}),", ",(0,i.jsx)(s.code,{children:"checked"}),", ",(0,i.jsx)(s.code,{children:"expanded"})," and ",(0,i.jsx)(s.code,{children:"busy"})]}),"\n",(0,i.jsxs)(s.li,{children:["use built-in Jest matchers to check the state of element found using some other query:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["enabled state: ",(0,i.jsxs)(s.a,{href:"/docs/api/jest-matchers#tobeenabled",children:[(0,i.jsx)(s.code,{children:"toBeEnabled()"})," / ",(0,i.jsx)(s.code,{children:"toBeDisabled()"})]})]}),"\n",(0,i.jsxs)(s.li,{children:["checked state: ",(0,i.jsxs)(s.a,{href:"/docs/api/jest-matchers#tobechecked",children:[(0,i.jsx)(s.code,{children:"toBeChecked()"})," / ",(0,i.jsx)(s.code,{children:"toBePartiallyChecked()"})]})]}),"\n",(0,i.jsxs)(s.li,{children:["selected state: ",(0,i.jsx)(s.a,{href:"/docs/api/jest-matchers#tobeselected",children:(0,i.jsx)(s.code,{children:"toBeSelected()"})})]}),"\n",(0,i.jsxs)(s.li,{children:["expanded state: ",(0,i.jsxs)(s.a,{href:"/docs/api/jest-matchers#tobeexpanded",children:[(0,i.jsx)(s.code,{children:"toBeExpanded()"})," / ",(0,i.jsx)(s.code,{children:"toBeCollapsed()"})]})]}),"\n",(0,i.jsxs)(s.li,{children:["busy state: ",(0,i.jsx)(s.a,{href:"/docs/api/jest-matchers#tobebusy",children:(0,i.jsx)(s.code,{children:"toBeBusy()"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"// Replace this\nconst view = screen.getByAccessibilityState({ disabled: true });\n\n// with this (getByRole query)\nconst view = screen.getByRole('<proper role here>', { disabled: true });\n\n// or this (Jest matcher)\nconst view = screen.getBy*(...); // Find the element using any query: *ByRole, *ByText, *ByTestId\nexpect(view).toBeDisabled(); // Assert its accessibility state\n"})}),"\n",(0,i.jsxs)(s.h2,{id:"removed-deprecated-byaccessibilityvalue-queries",children:["Removed deprecated *ByAccessibilityValue queries",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-deprecated-byaccessibilityvalue-queries",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"This deprecated query has been removed as is typically too general to give meaningful results. Use one of the following options:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/api/jest-matchers#tohaveaccessibilityvalue",children:(0,i.jsx)(s.code,{children:"toHaveAccessibilityValue()"})})," Jest matcher to check the state of element found using some other query"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#by-role",children:(0,i.jsx)(s.code,{children:"*ByRole"})})," query with ",(0,i.jsx)(s.code,{children:"value"})," option"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"// Replace this\nconst view = screen.getByAccessibilityValue({ now: 50, min: 0, max: 50 });\n\n// with this (getByRole query)\nconst view = screen.getByRole('<proper role here>', { value: { now: 50, min: 0, max: 50 } });\n\n// or this (Jest matcher)\nconst view = screen.getBy*(...); // Find the element using any query: *ByRole, *ByText, *ByTestId\nexpect(view).toHaveAccessibilityValue({ now: 50, min: 0, max: 50 }); // Assert its accessibility value\n"})}),"\n",(0,i.jsxs)(s.h2,{id:"removed-deprecated-debugmessage-variant",children:["Removed deprecated ",(0,i.jsx)(s.code,{children:"debug(message)"})," variant",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-deprecated-debugmessage-variant",children:"#"})]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"debug(message)"})," variant has been removed. Use ",(0,i.jsx)(s.code,{children:"debug({ message })"})," instead."]}),"\n",(0,i.jsxs)(s.h2,{id:"removed-debugshallow",children:["Removed ",(0,i.jsx)(s.code,{children:"debug.shallow"}),(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-debugshallow",children:"#"})]}),"\n",(0,i.jsxs)(s.p,{children:["For a time being we didn't support shallow rendering. Now we are removing the last remains of it: ",(0,i.jsx)(s.code,{children:"debug.shallow()"}),". If you are interested in shallow rendering see ",(0,i.jsx)(s.a,{href:"/docs/migration/previous/v2#removed-global-shallow-function",children:"here"}),"."]}),"\n",(0,i.jsxs)(s.h1,{id:"other-changes",children:["Other changes",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#other-changes",children:"#"})]}),"\n",(0,i.jsxs)(s.h2,{id:"updated-flushmicrotasks-internal-method",children:["Updated ",(0,i.jsx)(s.code,{children:"flushMicroTasks"})," internal method",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#updated-flushmicrotasks-internal-method",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:"This should not break any tests."}),"\n",(0,i.jsxs)(s.h2,{id:"full-changelog",children:["Full Changelog",(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#full-changelog",children:"#"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://github.com/callstack/react-native-testing-library/compare/v12.5.2...v13.0.0",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/callstack/react-native-testing-library/compare/v12.5.2...v13.0.0"})})]})}function n(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}s.default=n,n.__RSPRESS_PAGE_META={},n.__RSPRESS_PAGE_META["12.x%2Fdocs%2Fmigration%2Fv13.mdx"]={toc:[{text:"Supported React and React Native versions",id:"supported-react-and-react-native-versions",depth:2},{text:"Removed deprecated *ByAccessibilityState queries",id:"removed-deprecated-byaccessibilitystate-queries",depth:2},{text:"Removed deprecated *ByAccessibilityValue queries",id:"removed-deprecated-byaccessibilityvalue-queries",depth:2},{text:"Removed deprecated `debug(message)` variant",id:"removed-deprecated-debugmessage-variant",depth:2},{text:"Removed `debug.shallow`",id:"removed-debugshallow",depth:2},{text:"Updated `flushMicroTasks` internal method",id:"updated-flushmicrotasks-internal-method",depth:2},{text:"Full Changelog",id:"full-changelog",depth:2}],title:"Other changes",frontmatter:{}}}}]);