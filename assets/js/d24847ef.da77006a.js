"use strict";(self.webpackChunkreact_native_testing_library_website=self.webpackChunkreact_native_testing_library_website||[]).push([[471],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>y});var n=r(7294);function i(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){i(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}var s=n.createContext({}),p=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},c=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},u="mdxType",b={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var r=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),u=p(r),g=i,y=u["".concat(s,".").concat(g)]||u[g]||b[g]||a;return r?n.createElement(y,l(l({ref:e},c),{},{components:r})):n.createElement(y,l({ref:e},c))}));function y(t,e){var r=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=r.length,l=new Array(a);l[0]=g;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[u]="string"==typeof t?t:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},5882:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>b,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={id:"eslint-plugin-testing-library",title:"ESLint Plugin Testing Library Compatibility"},l=void 0,o={unversionedId:"eslint-plugin-testing-library",id:"eslint-plugin-testing-library",title:"ESLint Plugin Testing Library Compatibility",description:"Most of the rules of the eslint-plugin-testing-library are compatible with this library except the following:",source:"@site/docs/EslintPLluginTestingLibrary.md",sourceDirName:".",slug:"/eslint-plugin-testing-library",permalink:"/react-native-testing-library/docs/eslint-plugin-testing-library",draft:!1,editUrl:"https://github.com/callstack/react-native-testing-library/blob/main/website/docs/EslintPLluginTestingLibrary.md",tags:[],version:"current",frontMatter:{id:"eslint-plugin-testing-library",title:"ESLint Plugin Testing Library Compatibility"},sidebar:"docs",previous:{title:"How Should I Query?",permalink:"/react-native-testing-library/docs/how-should-i-query"},next:{title:"Testing Environment",permalink:"/react-native-testing-library/docs/testing-env"}},s={},p=[],c={toc:p},u="wrapper";function b(t){let{components:e,...r}=t;return(0,i.kt)(u,(0,n.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Most of the rules of the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/eslint-plugin-testing-library"},"eslint-plugin-testing-library")," are compatible with this library except the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/testing-library/eslint-plugin-testing-library/blob/main/docs/rules/prefer-user-event.md"},"prefer-user-event"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"userEvent")," requires a DOM environment so it is not compatible with this library")),(0,i.kt)("p",null,"Also, some rules have become useless, unless maybe you're using an old version of the library:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/eslint-plugin-testing-library/blob/main/docs/rules/prefer-wait-for.md"},"prefer-wait-for"),": the wait utility is no longer available")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/eslint-plugin-testing-library/blob/main/docs/rules/no-wait-for-empty-callback.md"},"no-wait-for-empty-callback"),": waitFor callback param is no longer optional"))),(0,i.kt)("p",null,"To get the rule ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/testing-library/eslint-plugin-testing-library/blob/main/docs/rules/consistent-data-testid.md"},"consistent-data-testid")," to work, you need to configure it to check the testID attribute by adding the following in your eslint config file, the ",(0,i.kt)("inlineCode",{parentName:"p"},"testIdPattern")," being whichever pattern you want to enforce:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "testing-library/consistent-data-testid": [\n    2,\n    {\n      "testIdAttribute": ["testID"],\n      "testIdPattern": "^TestId(__[A-Z]*)?$"\n    }\n  ]\n}\n')))}b.isMDXComponent=!0}}]);