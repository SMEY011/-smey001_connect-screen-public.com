"use strict";(self.webpackChunkreact_native_testing_library_website=self.webpackChunkreact_native_testing_library_website||[]).push([[63],{1275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>N,default:()=>L,frontMatter:()=>_,metadata:()=>q,toc:()=>S});var r=n(5893),a=n(1151),s=n(7294),i=n(6010),l=n(3735),o=n(6550),c=n(613),u=n(4423),d=n(636),h=n(9200);function p(e){var t,n;return null!=(t=null==(n=s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}function m(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=null!=t?t:function(e){return p(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u._X)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})}),[a,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,a=m(e),[i,l]=(0,s.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const a=null!=(t=r.find((e=>e.default)))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:a}))),[o,u]=b({queryString:n,groupId:r}),[d,p]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[r,a]=(0,h.Nk)(n);return[r,(0,s.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:r}),f=(()=>{const e=null!=o?o:d;return g({value:e,tabValues:a})?e:null})();(0,c.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),p(e)}),[u,p,a]),tabValues:a}}var v=n(5730);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:a,selectValue:s,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=o[n].value;r!==a&&(u(t),s(r))},h=e=>{var t;let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const t=c.indexOf(e.currentTarget)+1;n=null!=(r=c[t])?r:c[0];break}case"ArrowLeft":{var a;const t=c.indexOf(e.currentTarget)-1;n=null!=(a=c[t])?a:c[c.length-1];break}}null==(t=n)||t.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>c.push(e),onKeyDown:h,onClick:d,...s,className:(0,i.Z)("tabs__item",x.tabItem,null==s?void 0:s.className,{"tabs__item--active":a===t}),children:null!=n?n:t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function w(e){const t=f(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container",x.tabList),children:[(0,r.jsx)(y,{...e,...t}),(0,r.jsx)(j,{...e,...t})]})}function k(e){const t=(0,v.Z)();return(0,r.jsx)(w,{...e,children:p(e.children)},String(t))}const T={tabItem:"tabItem_Ymn6"};function I(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)(T.tabItem,a),hidden:n,children:t})}const _={id:"getting-started",title:"Getting Started"},N=void 0,q={id:"getting-started",title:"Getting Started",description:"The problem",source:"@site/docs/GettingStarted.md",sourceDirName:".",slug:"/getting-started",permalink:"/react-native-testing-library/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/callstack/react-native-testing-library/blob/main/website/docs/GettingStarted.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started"},sidebar:"docs",next:{title:"API",permalink:"/react-native-testing-library/docs/api"}},E={},S=[{value:"The problem",id:"the-problem",level:2},{value:"This solution",id:"this-solution",level:2},{value:"Installation",id:"installation",level:2},{value:"Jest matchers",id:"jest-matchers",level:3},{value:"ESLint plugin",id:"eslint-plugin",level:3},{value:"Example",id:"example",level:2}];function V(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"the-problem",children:"The problem"}),"\n",(0,r.jsx)(t.p,{children:"You want to write maintainable tests for your React Native components. As a part of this goal, you want your tests to avoid including implementation details of your components and focus on making your tests give you the confidence they are intended. As part of this, you want your tests to be maintainable in the long run so refactors of your components (changes to implementation but not functionality) don't break your tests and slow you and your team down."}),"\n",(0,r.jsx)(t.h2,{id:"this-solution",children:"This solution"}),"\n",(0,r.jsx)(t.p,{children:"The React Native Testing Library (RNTL) is a lightweight solution for testing React Native components. It provides light utility functions on top of React Test Renderer, in a way that encourages better testing practices. Its primary guiding principle is:"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"The more your tests resemble how your software is used, the more confidence they can give you."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["This project is inspired by ",(0,r.jsx)(t.a,{href:"https://github.com/testing-library/react-testing-library",children:"React Testing Library"}),". It is tested to work with Jest, but it should work with other test runners as well."]}),"\n",(0,r.jsxs)(t.p,{children:["You can find the source of the ",(0,r.jsx)(t.code,{children:"QuestionsBoard"})," component and this example ",(0,r.jsx)(t.a,{href:"https://github.com/callstack/react-native-testing-library/blob/main/src/__tests__/questionsBoard.test.tsx",children:"here"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.p,{children:"Open a Terminal in your project's folder and run:"}),"\n",(0,r.jsxs)(k,{groupId:"package-manager",children:[(0,r.jsx)(I,{value:"npm",label:"npm",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"npm install --save-dev @testing-library/react-native\n"})})}),(0,r.jsx)(I,{value:"yarn",label:"yarn",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"yarn add --dev @testing-library/react-native\n"})})})]}),"\n",(0,r.jsxs)(t.p,{children:["This library has a peer dependency for ",(0,r.jsx)(t.code,{children:"react-test-renderer"})," package. Make sure that your ",(0,r.jsx)(t.code,{children:"react-test-renderer"})," version matches exactly your ",(0,r.jsx)(t.code,{children:"react"})," version."]}),"\n",(0,r.jsx)(t.h3,{id:"jest-matchers",children:"Jest matchers"}),"\n",(0,r.jsxs)(t.p,{children:["To set up React Native-specific Jest matchers, add the following line to your ",(0,r.jsx)(t.code,{children:"jest-setup.ts"})," file (configured using ",(0,r.jsx)(t.a,{href:"https://jestjs.io/docs/configuration#setupfilesafterenv-array",children:(0,r.jsx)(t.code,{children:"setupFilesAfterEnv"})}),"):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import '@testing-library/react-native/extend-expect';\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eslint-plugin",children:"ESLint plugin"}),"\n",(0,r.jsxs)(t.p,{children:["We recommend setting up ",(0,r.jsx)(t.a,{href:"https://github.com/testing-library/eslint-plugin-testing-library",children:(0,r.jsx)(t.code,{children:"eslint-plugin-testing-library"})})," package to help you avoid common Testing Library mistakes and bad practices."]}),"\n",(0,r.jsxs)(t.p,{children:["Install the plugin (assuming you already have ",(0,r.jsx)(t.code,{children:"eslint"})," installed & configured):"]}),"\n",(0,r.jsxs)(k,{groupId:"package-manager",children:[(0,r.jsx)(I,{value:"npm",label:"npm",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"npm install --save-dev eslint-plugin-testing-library\n"})})}),(0,r.jsx)(I,{value:"yarn",label:"yarn",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"yarn add --dev eslint-plugin-testing-library\n"})})})]}),"\n",(0,r.jsxs)(t.p,{children:["Then, add relevant entry to your ESLint config (e.g., ",(0,r.jsx)(t.code,{children:".eslintrc.js"}),"). We recommend extending the ",(0,r.jsx)(t.code,{children:"react"})," plugin:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"module.exports = {\n  overrides: [\n    {\n      // Test files only\n      files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],\n      extends: ['plugin:testing-library/react']\n    }\n  ]\n};\n"})}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import { render, screen, fireEvent } from '@testing-library/react-native';\nimport { QuestionsBoard } from '../QuestionsBoard';\n\ntest('form submits two answers', () => {\n  const allQuestions = ['q1', 'q2'];\n  const mockFn = jest.fn();\n\n  render(<QuestionsBoard questions={allQuestions} onSubmit={mockFn} />);\n\n  const answerInputs = screen.getAllByLabelText('answer input');\n\n  fireEvent.changeText(answerInputs[0], 'a1');\n  fireEvent.changeText(answerInputs[1], 'a2');\n  fireEvent.press(screen.getByText('Submit'));\n\n  expect(mockFn).toBeCalledWith({\n    1: { q: 'q1', a: 'a1' },\n    2: { q: 'q2', a: 'a2' },\n  });\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can find the source of the ",(0,r.jsx)(t.code,{children:"QuestionsBoard"})," component and this example ",(0,r.jsx)(t.a,{href:"https://github.com/callstack/react-native-testing-library/blob/main/src/__tests__/questionsBoard.test.tsx",children:"here"}),"."]})]})}function L(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(V,{...e})}):V(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var r=n(7294);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);