"use strict";(self.webpackChunkreact_native_testing_library_website=self.webpackChunkreact_native_testing_library_website||[]).push([[288],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3581:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={id:"faq",title:"FAQ"},o=void 0,s={unversionedId:"faq",id:"faq",title:"FAQ",description:"Can I test the native features of React Native apps?",source:"@site/docs/FAQ.md",sourceDirName:".",slug:"/faq",permalink:"/react-native-testing-library/docs/faq",draft:!1,editUrl:"https://github.com/callstack/react-native-testing-library/blob/main/website/docs/FAQ.md",tags:[],version:"current",frontMatter:{id:"faq",title:"FAQ"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/react-native-testing-library/docs/getting-started"},next:{title:"API",permalink:"/react-native-testing-library/docs/api"}},l={},u=[{value:"Can I test the native features of React Native apps?",id:"can-i-test-the-native-features-of-react-native-apps",level:4},{value:"Should I use/migrate to <code>screen</code> queries?",id:"should-i-usemigrate-to-screen-queries",level:3},{value:"Should I use/migrate to User Event interactions?",id:"should-i-usemigrate-to-user-event-interactions",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"can-i-test-the-native-features-of-react-native-apps"},"Can I test the native features of React Native apps?"),(0,a.kt)("p",null,"Short answer: no."),(0,a.kt)("p",null,"React Native Testing Library does not provide an entire React Native runtime since that would require running on a physical device\nor iOS simulator/Android emulator to provision the underlying OS and platform APIs."),(0,a.kt)("p",null,"Instead of using React Native renderer, it simulates only the JavaScript part of its runtime\nusing ",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/test-renderer.html"},"React Test Renderer")," while providing queries\nand event APIs (",(0,a.kt)("inlineCode",{parentName:"p"},"userEvent"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"fireEvent"),") that mimicking certain behaviors from the actual runtime."),(0,a.kt)("p",null,"You can learn more about our testing environment ",(0,a.kt)("a",{parentName:"p",href:"/react-native-testing-library/docs/testing-env"},"here"),"."),(0,a.kt)("p",null,"This approach has specific benefits and shortfalls. On the positive side:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it allows testing most of the logic of regular React Native apps"),(0,a.kt)("li",{parentName:"ul"},"it allows running tests on any OS supported by Jest or other test runners, e.g., on CI"),(0,a.kt)("li",{parentName:"ul"},"it uses much less resources than full runtime simulation"),(0,a.kt)("li",{parentName:"ul"},"you can use Jest fake timers")),(0,a.kt)("p",null,"On the negative side:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"you cannot test native features"),(0,a.kt)("li",{parentName:"ul"},"it might not perfectly simulate certain JavaScript features, but we are working on it")),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"user-event"},"User Event interactions")," solve some of the simulation issues, as they offer more realistic event handling than the basic ",(0,a.kt)("a",{parentName:"p",href:"api#fireevent-api"},"Fire Event API"),"."),(0,a.kt)("h3",{id:"should-i-usemigrate-to-screen-queries"},"Should I use/migrate to ",(0,a.kt)("inlineCode",{parentName:"h3"},"screen")," queries?"),(0,a.kt)("p",null,"There is no need to migrate existing test code to use ",(0,a.kt)("inlineCode",{parentName:"p"},"screen"),"-bases queries. You can still use\nqueries and other functions returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"render"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"screen")," object captures the latest ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," result."),(0,a.kt)("p",null,"For new code, you are encouraged to use ",(0,a.kt)("inlineCode",{parentName:"p"},"screen")," as there are some good reasons for that, which are described in ",(0,a.kt)("a",{parentName:"p",href:"https://kentcdodds.com/blog/common-mistakes-with-react-testing-library#not-using-screen"},"this article")," by Kent C. Dodds."),(0,a.kt)("h3",{id:"should-i-usemigrate-to-user-event-interactions"},"Should I use/migrate to User Event interactions?"),(0,a.kt)("p",null,"We encourage you to migrate existing tests to use the ",(0,a.kt)("a",{parentName:"p",href:"user-event"},"User Event interactions"),", which offer more realistic event handling than the basic ",(0,a.kt)("a",{parentName:"p",href:"api#fireevent-api"},"Fire Event API"),". Hence, it will provide more confidence in the quality of your code."))}d.isMDXComponent=!0}}]);